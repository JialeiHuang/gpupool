apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: jialeinew
spec:
  replicas: 4
  selector:
    matchLabels:
      name: jialei
  template:
    metadata:
      labels:
        name: jialei
    spec:
      hostNetwork: true
      hostIPC: true
      containers:
      - name: orion-client-hvd
        image: 172.16.112.220:30006/library/ubuntu-pytorch:1.5.0
        command: ["bash", "-c", "--"]
        args: ["while true; do sleep 30; done;"]
        resources:
          limits:
            cpu: 8 # 最大CPU
            memory: 100Gi # 最大内存数目
            virtaitech.com/gpu: 8  # 最大GPU数目
          requests:
            cpu: 8 # 最小需要的CPU数目 （如果目前资源不够，就放弃启动）
            memory: 10Gi # 最小需要申请的内存的数目（如果目前资源不够，就放弃启动）
            virtaitech.com/gpu: 8  # 最小需要的GPU数目
        env:
          - name : ORION_GMEM
            value : "10000"  # 每张显卡的显存，单位为M
          - name : ORION_RATIO
            value : "100"
          - name: ORION_VGPU
            value: "1"
          - name: ORION_RESERVED
            value: "0"
          - name: ORION_CROSS_NODE
            value: "1"
          - name : ORION_GROUP_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
        volumeMounts:
        - name: my-pvc  # 和下面的名字对应
          mountPath: /pvc # 在pod的文件系统中的挂载点
        - name: my-local-disk-1  # 与下面volumes的名字对应
          mountPath: /mnt/data1  # 本地的挂载点
        - name: my-local-disk-2  # 与下面volumes的名字对应
          mountPath: /mnt/data2  # 本地的挂载点

      volumes:
        - name: my-pvc  # 和上面的名字对应
          persistentVolumeClaim:
            claimName: jialei  # 填写你想要挂载的pvc，pvc申请见pvc-example.yaml
        - name: my-local-disk-1
          hostPath:
            path: /data  # 大小3.7T
        - name: my-local-disk-2
          hostPath:
            path: /data2 # 大小3.0T

